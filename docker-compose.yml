version: '3.4'

#Creates a Docker swarm for nats-streaming-server:
#Reference: https://docs.nats.io/nats-streaming-server/swarm
#Running for the first time? Run: docker swarm init
# If you don't want to run in Docker containers:
#   1) Change URLs in appsettings.json in NatsNlogConsumerExample & NatsNlogExample
#   2) Change <ActiveDebugProfile>Docker</ActiveDebugProfile> in NatsNlogConsumerExample.csproj.user & NatsNlogExample.csproj.user to <ActiveDebugProfile>Debug</ActiveDebugProfile>
#   3) Use the NatsStreamServerInstaller project to setup/configure Windows services for NATS Streaming Server cluster

networks:
  nats-streaming-example:
    attachable: true
    driver: overlay

services:
  ravendb-withdata:
    image: ravendb/ravendb
    ports:
      - "8080:8080"
      - "38888:38888"
    volumes:
      - "/c/RavenDb/Config:/opt/RavenDB/config"
      - "/c/RavenDb/Data:/opt/RavenDB/Server/RavenData"
    environment:
      - "RAVEN_Setup_Mode=None"
      #- "RAVEN_ARGS=--Setup.Mode=None"
      - "RAVEN_ARGS=--log-to-console"
      - "RAVEN_License_Eula_Accepted=true"
      - "RAVEN_Security_UnsecuredAccessAllowed=PrivateNetwork"

  nats-cluster-node-A:
    image: nats:latest
    restart: always
    command: "-cluster nats://0.0.0.0:6222 -routes nats://nats-cluster-node-A:6222,nats://nats-cluster-node-B:6222,nats://nats-cluster-node-C:6222"
    networks:
      - nats-streaming-example

  nats-cluster-node-B:
    image: nats:latest
    restart: always
    command: "-cluster nats://0.0.0.0:6222 -routes nats://nats-cluster-node-A:6222,nats://nats-cluster-node-B:6222,nats://nats-cluster-node-C:6222"
    networks:
      - nats-streaming-example

  nats-cluster-node-C:
    image: nats:latest
    restart: always
    command: "-cluster nats://0.0.0.0:6222 -routes nats://nats-cluster-node-A:6222,nats://nats-cluster-node-B:6222,nats://nats-cluster-node-C:6222"
    networks:
      - nats-streaming-example

  nats-streaming-node-A:
    image: nats-streaming:latest
    restart: always
    expose:
      - "4222"
      - "8222"
      - "6221"
    ports:
      - "4222"
      - "8222"
      - "6221:6221"
    hostname: "nats-node-A"
    volumes:
      - "/c/logs:/logs"
      - "/c/nats/shareddatastore-A:/nats/shareddatastore-A"
      - "/c/nats/cluster/nats-cluster-node-A:/cluster/nats-cluster-node-A"
    command: "-p 4222 -store file -dir /nats/shareddatastore-A -clustered -cluster_id test-cluster -cluster_node_id node-A -cluster_log_path /cluster/nats-cluster-node-A -cluster_peers node-A,node-B,node-C -nats_server nats://nats-cluster-node-A:4222,nats://nats-cluster-node-B:4222,nats://nats-cluster-node-C:4222 -l /logs/nats-node-A.log -DV"
    networks:
      - nats-streaming-example
    depends_on:
      - nats-cluster-node-A
      - nats-cluster-node-B
      - nats-cluster-node-C

  nats-streaming-node-B:
    image: nats-streaming:latest
    restart: always
    expose:
      - "4222"
      - "6222"
    ports:
      - "4222"
      - "6222:6222"
    hostname: "nats-node-B"
    volumes:
      - "/c/logs:/logs"
      - "/c/nats/shareddatastore-B:/nats/shareddatastore-B"
      - "/c/nats/cluster/nats-cluster-node-B:/cluster/nats-cluster-node-B"
    command: "-p 4222 -store file -dir /nats/shareddatastore-B -clustered -cluster_id test-cluster -cluster_node_id node-B -cluster_log_path /cluster/nats-cluster-node-B -cluster_peers node-A,node-B,node-C -nats_server nats://nats-cluster-node-A:4222,nats://nats-cluster-node-B:4222,nats://nats-cluster-node-C:4222 -l /logs/nats-node-B.log -DV"
    networks:
      - nats-streaming-example
    depends_on:
      - nats-cluster-node-A
      - nats-cluster-node-B
      - nats-cluster-node-C

  nats-streaming-node-C:
    image: nats-streaming:latest
    restart: always
    expose:
      - "4222"
      - "6222"
    ports:
      - "4222"
      - "6223:6223"
    hostname: "nats-node-C"
    volumes:
      - "/c/logs:/logs"
      - "/c/nats/shareddatastore-C:/nats/shareddatastore-C"
      - "/c/nats/cluster/nats-cluster-node-C:/cluster/nats-cluster-node-C"
    command: "-p 4222 -store file -dir /nats/shareddatastore-C -clustered -cluster_id test-cluster -cluster_node_id node-C -cluster_log_path /cluster/nats-cluster-node-C -cluster_peers node-A,node-B,node-C -nats_server nats://nats-cluster-node-A:4222,nats://nats-cluster-node-B:4222,nats://nats-cluster-node-C:4222 -l /logs/nats-node-C.log -DV"
    networks:
      - nats-streaming-example
    depends_on:
      - nats-cluster-node-A
      - nats-cluster-node-B
      - nats-cluster-node-C

  natsnlogconsumerexample:
    image: ${DOCKER_REGISTRY-}natsnlogconsumerexample
    stdin_open: true
    tty: true
    build:
      context: .
      dockerfile: NatsNlogConsumerExample/Dockerfile
    ports:
      - "4222"
    volumes: 
      - type: bind
        source: "/c/logs"
        target: "/c/logs"
    networks:
      - nats-streaming-example
    depends_on:
      - natsnlogexample
      - ravendb-withdata
    environment:
      - "isdockercontainer=true"

  natsnlogexample:
    image: ${DOCKER_REGISTRY-}natsnlogexample
    stdin_open: true
    tty: true
    build:
      context: .
      dockerfile: NatsNlogExample/Dockerfile
    ports:
      - "4222"
    volumes: 
      - type: bind
        source: "/c/logs"
        target: "/c/logs"
    networks:
      - nats-streaming-example
    depends_on:
      - nats-streaming-node-A
      - nats-streaming-node-B
      - nats-streaming-node-C
    environment:
      - "isdockercontainer=true"